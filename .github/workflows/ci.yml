name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    name: Build, Test, and Verify
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code base
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build multi-stage Docker image
      - name: Build Docker image
        run: |
          docker build --target builder -t service-server-builder .
          docker build -t service-server:latest .

      # Step 4: Run tests in the builder stage
      - name: Run tests
        run: |
          docker run --rm service-server-builder npm test

      # Step 5: Verify health check in production container
      - name: Verify health check
        run: |
          docker run -d --name service-server -p 4000:4000 service-server:latest
          sleep 30
          curl -f http://localhost:4000/health
          docker stop service-server

      # Step 6: Scan Docker image with Snyk
      - name: Scan Docker image with Snyk
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: service-server:latest
          args: --severity-threshold=high

      # Step 7: Install Conftest
      - name: Install Conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.58.0/conftest_0.58.0_Linux_x86_64.tar.gz
          tar -xzf conftest_0.58.0_Linux_x86_64.tar.gz -C /usr/local/bin

      # Step 8: Run OPA policies on Dockerfile
      - name: Run OPA policies
        run: |
          conftest test ./dockerfile --policy ./policies/docker.rego

      # Step 9: Install Notation
      - name: Install Notation
        run: |
          curl -Lo notation.tar.gz https://github.com/notaryproject/notation/releases/download/v2.0.0-alpha.1/notation_2.0.0-alpha.1_linux_amd64.tar.gz
          tar xvf notation.tar.gz
          sudo mv notation /usr/local/bin/

      # Step 10: Push the Docker image to the registry
      - name: Push Docker image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker tag service-server:latest ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest

      # Step 11: Configure Notation certificates
      - name: Configure Notation certificates
        run: |
          echo "${{ secrets.NOTATION_CERT }}" > cert.pem
          echo "${{ secrets.NOTATION_KEY }}" > key.pem
          notation certificate add prod-cert --type x509 --store ca cert.pem
          notation key import prod-key --store keys --type private key.pem

      # Step 12: Sign the Docker image with Notation
      - name: Sign Docker image with Notation
        run: |
          notation sign --signature-format cose --key prod-key ghcr.io/${{ github.repository }}:latest
        env:
          NOTATION_USERNAME: $GITHUB_ACTOR
          NOTATION_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      # Step 13: Set up trust policy for Notation
      - name: Set up trust policy for Notation
        run: |
          mkdir -p ~/.config/notation
          cp trustpolicy.json ~/.config/notation/trustpolicy.json

      # Step 14: Verify the Docker image signature with Notation
      - name: Verify Docker image signature with Notation
        run: |
          notation verify ghcr.io/${{ github.repository }}:latest
        env:
          NOTATION_USERNAME: $GITHUB_ACTOR
          NOTATION_PASSWORD: ${{ secrets.GITHUB_TOKEN }}